services:
  front:
    image: front
    build:
      context: ./front/
      dockerfile: ./front/Dockerfile
      target: prod
    environment:
      NEXTAUTH_URL: ${NEXTAUTH_URL}
      NEXTAUTH_SECRET: ${NEXTAUTH_SECRET}
      GITHUB_ID: ${GITHUB_ID}
      GITHUB_SECRET: ${GITHUB_SECRET}
    ports:
      - 8080:3000
    depends_on:
      psql:
        condition: service_healthy

  back:
    image: back
    build:
      context: ./back/
      dockerfile: ./back/Dockerfile
      target: prod
    ports: 
      - 8081:8081
    volumes:
      - ./src:/app/src
    depends_on:
      psql:
        condition: service_healthy
    environment:
      PORT: 8081
      DB_HOST: psql
      DB_PORT: 5432
      DB_USERNAME: postgres
      DB_PASSWORD: postgres
      DB_DATABASE: infra

  psql:
    image: postgres:latest
    restart: always
    ports:
      - 5432:5432
    environment:
      POSTGRES_USERNAME: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: infra
    volumes:
      - psql_volume:/var/lib/postgresql/data
    healthcheck:
      test: pg_isready -U postgres -d infra
      interval: 10s
      retries: 5
      timeout: 5s

  grafana:
    image: grafana/grafana-oss
    container_name: grafana
    restart: unless-stopped
    environment:
      - GF_LOG_LEVEL=warning
    ports:
      - 8082:3000
    volumes:
      - 'grafana_storage:/var/lib/grafana'

volumes:
  grafana_storage: {}
  psql_volume:
